@page
@using Nakshatra.Api.Model
@using Nakshatra.PersonalWebsite.Web.Pages
@inject IConfiguration _config;

@model BlogModel
@{
    ViewData["Title"] = "Blog page";
}

<!--================Home Banner Area =================-->
<section class="home_banner_area blog_banner">
    <div class="banner_inner d-flex align-items-center">
        <div class="overlay bg-parallax" data-stellar-ratio="0.9" data-stellar-vertical-offset="0" data-background=""></div>
        <div class="container">
            <div class="blog_b_text text-center">
                <h2>@Model.BlogDetails.ShortDescription</h2>
                <p>@Model.BlogDetails.LongDescription</p>
                <a class="white_bg_btn" target="_blank" href="https://dotnetkari.blogspot.com/">View More</a>
            </div>
        </div>
    </div>
</section>
<!--================End Home Banner Area =================-->
<!--================Blog Area =================-->
<section class="blog_area" id="posts">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <div class="blog_left_sidebar">
                    <nav class="blog-pagination justify-content-center d-flex">

                    </nav>
                    @{
                        var blogName = @Request.Query["name"];
                        var searchTerms = @Request.Query["searchTerms"];
                    }

                    @{
                        List<string> GetSearchFilters(string filter)
                        {
                            var listSearchFilters = new List<string>();


                            if (searchTerms.Any())
                            {
                                listSearchFilters = searchTerms.ToString().Split(',').ToList();

                                if (!listSearchFilters.Contains(filter))
                                {
                                    listSearchFilters.Add(filter);
                                }
                            }
                            else
                            {
                                listSearchFilters.Add(filter);
                            }

                            return listSearchFilters;
                        }

                        string[] GetQuerySearchTerms()
                        {
                            var listQuerySearchTerms = new List<string>();
                            var searchTerms = @Request.Query["searchTerms"];

                            if (searchTerms.Any())
                            {
                                listQuerySearchTerms = searchTerms.ToString().Split(',').ToList();
                            }

                            return listQuerySearchTerms.Any() ? listQuerySearchTerms.ToArray() : new string[0];
                        }

                        List<string> GetLabels(List<string> postlabels, string[] arraySearchTerms)
                        {
                            if (postlabels != null)
                            {
                                foreach (var searchTerm in arraySearchTerms)
                                {
                                    if (postlabels.Contains(searchTerm))
                                    {
                                        postlabels.Remove(searchTerm);
                                    }
                                }
                            }

                            return postlabels ?? new List<string>();
                        }
                    }

                    <ul class="pagination">
                        <li class="page-item @(!Model.ShowFirst? "disabled":"")">
                            <a asp-page="/blog" asp-route-CurrentPage="1" asp-fragment="posts" class="page-link"><i class="fa fa-fast-backward"></i></a>
                        </li>

                        <li class="page-item @(!Model.ShowPrevious? "disabled":"")">
                            <a asp-page="/blog" asp-route-CurrentPage="@(Model.CurrentPage -1)" asp-fragment="posts" class="page-link"><i class="fa fa-step-backward"></i></a>
                        </li>
                        <li class="page-item  @(!Model.ShowNext? "disabled":"")">
                            <a asp-page="/blog" asp-route-CurrentPage="@(Model.CurrentPage + 1)" asp-fragment="posts" class="page-link"><i class="fa fa-step-forward"></i></a>
                        </li>

                        <li class="page-item  @(!Model.ShowLast? "disabled":"")">
                            <a asp-page="/blog" asp-route-CurrentPage="@Model.TotalPages" asp-fragment="posts" class="page-link"><i class="fa fa-fast-forward"></i></a>
                        </li>
                    </ul>
                    @if (@searchTerms.Any())
                    {
                        <ul class="pagination">
                            <li>
                                <a class="fa fa-remove" href="/blog?name=@blogName#posts">Clear Filters</a>
                            </li>
                        </ul>
                    }
                    @if (@Model.BlogDetails?.Items == null)
                    {
                        <ul class="pagination">
                            <li>
                                <h4 class="text-danger">No records found.</h4>
                            </li>
                        </ul>
                    }
                    else
                    {
                        @foreach (var post in @Model.BlogDetails.Items)
                        {
                            <article class="row blog_item">
                                <div class="col-md-3">
                                    <div class="blog_info text-right">
                                        <ul class="blog_meta list">
                                            <li><a href="@Model.BlogDetails.Author.Url">@Model.BlogDetails.Author.DisplayName<i class="lnr lnr-user"></i></a></li>
                                            <li><a href="#">@String.Format("{0}, {1} {2}", @post.Published.ToString("MMMM"), @post.Published.ToString("dd"), @post.Published.ToString("yyyy"))<i class="lnr lnr-calendar-full"></i></a></li>
                                            <li><a href="#">@post.Replies.TotalItems Views<i class="lnr lnr-eye"></i></a></li>
                                        </ul>
                                        <div class="post_tag">
                                            @{
                                                //Get search filters applied earlier
                                                var arrayQuerySearchTerms = GetQuerySearchTerms();

                                                //Get all labels for post except the filters applied
                                                var postLables = GetLabels(post.Labels, arrayQuerySearchTerms);

                                                if (postLables.Any())
                                                {
                                                    @for (int i = 0; i < postLables.Count(); i++)
                                                    {
                                                        //Get search filters including the existing search filters applied
                                                        var listSearchFilters = GetSearchFilters(@postLables[i]);
                                                        <a href="?name=@blogName&searchTerms=@string.Join(',', listSearchFilters.ToArray())#posts">@postLables[i]</a>

                                                        if (i + 1 < postLables.Count())
                                                        {
                                                            <label>,</label>
                                                        }
                                                    }
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-9">
                                    <div class="blog_post">
                                        <img src="img/blog/main-blog/m-blog-1.jpg" alt="">
                                        <div class="blog_details">
                                            <h1>@post.Title</h1>
                                            @Html.Raw(@post.Content)
                                        </div>
                                    </div>
                                </div>
                            </article>
                        }
                    }

                    <ul class="pagination">
                        <li class="page-item @(!Model.ShowFirst? "disabled":"")">
                            <a asp-page="/blog" asp-route-CurrentPage="1" asp-fragment="posts" class="page-link"><i class="fa fa-fast-backward"></i></a>
                        </li>

                        <li class="page-item @(!Model.ShowPrevious? "disabled":"")">
                            <a asp-page="/blog" asp-route-CurrentPage="@(Model.CurrentPage -1)" asp-fragment="posts" class="page-link"><i class="fa fa-step-backward"></i></a>
                        </li>
                        <li class="page-item  @(!Model.ShowNext? "disabled":"")">
                            <a asp-page="/blog" asp-route-CurrentPage="@(Model.CurrentPage + 1)" asp-fragment="posts" class="page-link"><i class="fa fa-step-forward"></i></a>
                        </li>

                        <li class="page-item  @(!Model.ShowLast? "disabled":"")">
                            <a asp-page="/blog" asp-route-CurrentPage="@Model.TotalPages" asp-fragment="posts" class="page-link"><i class="fa fa-fast-forward"></i></a>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="blog_right_sidebar">
                    <aside class="single_sidebar_widget search_widget">
                        <form action="blog#posts" class="row">
                            <div class="input-group">
                                <input type="text" name="searchTerms" class="form-control" placeholder="Search Posts">
                                <input value="@blogName" id="name" name="name" type="hidden">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="submit"><i class="lnr lnr-magnifier"></i></button>
                                </span>
                            </div><!-- /input-group -->
                        </form>
                        <div class="br"></div>
                    </aside>
                    <aside class="single_sidebar_widget author_widget">
                        <h4>@Model.BlogDetails.Author.DisplayName</h4>
                        <p>Blog writer</p>
                        <div class="social_icon">
                            <a target="_blank" href="@Model.Profile.SocialDetails.Where(s => s.Name.Equals("Blogger/dotnetkari", StringComparison.InvariantCultureIgnoreCase)).Select(s => s.Link).FirstOrDefault()"><i class="fa fa-facebook"></i></a>
                            <a target="_blank" href="@Model.Profile.SocialDetails.Where(s => s.Name.Equals("LinkedIn", StringComparison.InvariantCultureIgnoreCase)).Select(s => s.Link).FirstOrDefault()"><i class="fa fa-linkedin"></i></a>
                            <a target="_blank" href="@Model.Profile.SocialDetails.Where(s => s.Name.Equals("FaceBook", StringComparison.InvariantCultureIgnoreCase)).Select(s => s.Link).FirstOrDefault()"><i class="fa fa-github"></i></a>
                        </div>
                        <p>@Model.BlogDetails.Author.BlogDescription</p>
                    </aside>
                    <aside class="single_sidebar_widget ads_widget">
                        <a href="#"><img class="img-fluid" src="img/blog/add.jpg" alt=""></a>
                        <div class="br"></div>
                    </aside>
                    <aside class="single-sidebar-widget tag_cloud_widget">
                        <h4 class="widget_title">Tag Clouds</h4>
                        <ul class="list">
                            @if (Model.BlogDetails?.Items != null)
                            {
                                @foreach (var label in @Model.BlogDetails.Items?.Where(i => i.Labels != null).SelectMany(i => i.Labels).Distinct())
                                {
                                    <li>
                                        <a href="?name=@blogName&searchTerms=@label#posts">@label</a>
                                    </li>
                                }
                            }
                        </ul>
                    </aside>
                </div>
            </div>
        </div>
    </div>
</section>
<!--================Blog Area =================-->